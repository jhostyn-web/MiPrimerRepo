*{
    box-sizing: border-box;
    top: 0px;
    margin: 0px;
}

body{
    background-color: rgb(17, 113, 182);
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    width: 100vw;
    }

/*
DISPLAY:
        Flex:convierte el elemento en flexible,ideal para posicionar

        Grid:dise単ado para trabajar filas y columnas

        None:oculta el elemento

        Block:es el tipo de display base que cada elemento tiene

        Flex-directions: indica la direccion de un elemento tipo flex(fila,columna,fila inversa,columna inversa)

        Flex-wrap: determina si los elementos flexibles deben romperse y continuar en una nueva linea o no.

        Grid-wrap: detrmina si las filas o columnas de la rejilla pueden romperse y continuar en una nueva linea o no.

        Grid-template-columns: permite establecer las cantidad de columnas y su tama単o en un elemento tipo grid

        Grid-template-rows: permite establecer la cantidad de filas y su tama単o en un elemento tipo grid

        Justify-content: se encarga de trabajar el eje principal de una alineacion(eje horizontal*X* para filas y eje vertical*Y* para columnas)
        -Space-between: separa los elementos lo maximo posible sin dejar espacio con el borde
        -Space-around: separa los elementos lo maximo posible pero dejando un peque単o espacio con los bordes
        -Space-evenly: separa los elementos equitativamente tanto entre si como con el borde

        Aling-items: se encarga de trabajar el eje secundario de una alineacion (eje vertical *Y* para filas y eje horizontal *X* para columnas)
*/


/*main{
color: aliceblue;
display:flex;
justify-content: space-evenly;
align-items: center;
flex-wrap: wrap;
width: 500px;
height: 400px;
background-color: aliceblue;

}*/

main{
    color: rgb(1, 11, 20);
    display: grid;
    width: 50%;
border: 4px black solid;

}

main div{
    background-color: rgb(119, 234, 211);
    height: 50px;
    width: 90px;
}